4日目 再帰ック道場
=================

　おそらく、最近のプログラム言語であるならば、「再帰」が出来る筈だ。「再帰」というのは、「ある関数が、自らの関数を呼び出すこと」だ。Clojureのような言語がパワフルである理由の一つに、再帰的なプログラムが瞬時に書けることが挙げられるだろう。とはいえ、急にそんなことを言われても「なにいってるんだこいつ」という感じにしかならない。なので、再帰について、この日は学ぶ。

1. Dungeon Crawler !!
---------------------

　そこで、今回は例題として、洞窟の中を検索するプログラムを作ろうと思う。洞窟は、部屋と通路がある。通路は一つ以上の通路があり、次の部屋に続いている。そして、行き止まりの部屋の何処かに、宝物が隠されている。ざっと地図にすると、こういう感じだ。

```
A -> B -> C
       -> D -> E -> H
            -> F
            -> G
```

　さて、この場合に、宝物が`H`と`F`にあったとして、そこまでの経路を出力したいとする。こういうときに、「再帰」というのはとても力を発揮する。

　まず、地図をリストとして表現してみよう。例えば、AとBの連結は次のように表現できる。

```
(A B)
```

　そして、Bまでいくと、CかDの部屋に続いている。従って

```
(A B (C D))
```

　になるが、Dの通路はE、F、Gのいずれかになる。従って

```
(A B (C (D E F G)))
```

　とモデリングできる。さらに、EはHに続いている。

```
(A B (C (D (E H) F G)))
```

　というわけで、これが部屋のリストということになる。
